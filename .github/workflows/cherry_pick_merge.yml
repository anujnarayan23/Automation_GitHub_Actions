name: Create Pull Request with Cherry-picked Commits

on:
  workflow_dispatch:
    inputs:
      feature-branch:
        description: 'Feature Branch Name'
        required: true
      merge-branch:
        description: 'Merge Branch Name'
        required: true
      commit-ids:
        description: 'Commit IDs (comma-separated)'
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Feature Branch
        run: |
          # Set branch names
          FEATURE_BRANCH=${{ github.event.inputs.feature-branch }}
          MERGE_BRANCH=${{ github.event.inputs.merge-branch }}

          # Create a feature branch from the merge branch
          git config --global user.name "Anuj Narayan"
          git config --global user.email "anujnarayan11@gmail.com"
          git pull
          git checkout -b $FEATURE_BRANCH origin/$MERGE_BRANCH

      - name: Cherry-pick Commits
        run: |
          IFS=',' read -ra COMMITS <<< "${{ github.event.inputs.commit-ids }}"
           for COMMIT in "${COMMITS[@]}"; do
             git cherry-pick $COMMIT
           done

      - name: Push Changes
        run: |
          # Push the changes to the feature branch
          git push origin ${{ github.event.inputs.feature-branch }}

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Define the API endpoint and data for the pull request
          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls"
          DATA='{
            "title": "Feature to Test PR",
            "head": "'"$FEATURE_BRANCH"'",
            "base": "'"$MERGE_BRANCH"'"
          }'

          # Send a POST request to create the pull request
          PR_RESPONSE=$(curl -X POST -H "Authorization: token $PAT_TOKEN" -d "$DATA" "$API_URL")

          # Check the response and handle errors
          if [[ "$(echo "$PR_RESPONSE" | jq -r '.url')" == "$API_URL" ]]; then
            PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')
            echo "Pull request created successfully. PR Number: $PR_NUMBER"
          else
            echo "Failed to create pull request:"
            echo "$PR_RESPONSE"
            exit 1
          fi
