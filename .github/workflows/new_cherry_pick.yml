name: Cherry-Pick Commits and Create PR

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch to fetch commits from'
        required: true

jobs:
  cherry_pick_commits:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Fetch Commits from Source Branch
      id: fetch_commits
      run: |
        git fetch origin ${{ github.event.inputs.source_branch }}:$GITHUB_SHA
        commit_list=$(git log $GITHUB_SHA --oneline)
        echo "::set-output name=commit_list::$commit_list"
      shell: bash

    - name: Select Commits to Cherry-Pick
      id: select_commits
      run: |
        IFS=$'\n'
        select_commits=()
        for commit in ${{ steps.fetch_commits.outputs.commit_list }}; do
          select_commits+=($commit)
        done
        echo "::set-output name=selected_commits::${select_commits[*]}"
      shell: bash

    - name: Set up Git Configuration
      run: |
        git config --global user.name "Anuj Narayan"
        git config --global user.email "anujnarayan11@gmail.com"
      shell: bash

    - name: Create Feature Branch
      run: |
        git pull
        git fetch origin
        git checkout origin/test
        new_branch="feature-$(date +'%Y%m%d%H%M%S')"
        git checkout -b $new_branch
      shell: bash

    - name: Cherry-Pick Selected Commits
      id: cherry_pick
      run: |
        IFS=$'\n'
        for commit in ${{ steps.select_commits.outputs.selected_commits }}; do
          commit_hash=$(echo "$commit" | cut -d ' ' -f 1)
          git cherry-pick $commit_hash
        done
      shell: bash

    - name: Push Changes to Feature Branch
      run: |
        git push origin $new_branch
        echo "::set-output name=new_branch::$new_branch"
      shell: bash

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        title: Cherry-Pick Commits
        head: ${{ steps.push_changes.outputs.new_branch }}
        base: test
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
